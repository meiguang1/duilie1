SASDAS


[
    {
      "fnName": "4-28对接问题.docx",
      "fnUrl": "D:\\4-28对接问题.docx"
    },
    {
      "fnName": "新建文本文档.txt",
      "fnUrl": "D:\\新建文本文档.txt"
    }
  ]

PT:
[
   {
      "personCount": "新建文本文档.txt",
      "healthForm":"D:/IDEAGit/duilie1/hcycomtrack/444e22f0a4194f3abe9e674ba5b778e9.txt"
    }
]

C:/Users/WeiJie Li/Desktop/duilie/new/hou/hcycom-track\uploadFiles\1560389314886.txt
C:/Users/WeiJie Li/Desktop/duilie/new/hou/hcycom-track\uploadFiles\1560389314886.txt

D:\IDEAGit\duilie1\hcycom-track\medical_examination_report\514b95cdc0044bf982b72fe702ab8475.txt
D:/IDEAGit/duilie1/hcycom-track/514b95cdc0044bf982b72fe702ab8475.txt


C:/Users/WeiJie Li/Desktop/duilie/new/hou/hcycom-track\\uploaFiles\\1560389314886.txt




<a href="http://39.98.182.94:8080/file/20190611190752.zip"/>
/opt/tomcat/apache-tomcat-8.5.23/webapps//opt/tomcat/apache-tomcat-8.5.23/webapps/file/medical_examination_report/aaa.txt


















@RequestMapping(value = "/ziploadLogs", method = RequestMethod.POST)
    @ApiOperation(value="打包日志", notes="打包日志")
    @ResponseBody
    public JSONObject ziploadLogs( @RequestBody JSONArray jsonArray) {
        //System.out.printf("asdf"+JSONObject.toJSONString(jsonArray));
        JSONObject result=new JSONObject();
        String time=TimeUtil.dateTime2String(TimeUtil.getNewDate(),"yyyyMMddHHmmss");
        //File ZipLog= FileUtil.mkdirFiles("D:"+"/"+time);                        // 创建新的文件夹 空的
        File file = new File("D:"+"\\\\"+time);
        if(!file.exists()){
            file.mkdirs();
        }
       // File ZipLog= file.mkdirs("D:"+"\\\\"+time);                        // 创建新的文件夹 空的
        try {
            for(int i=0;i<jsonArray.size();i++){
                String str = JSONObject.toJSONString(jsonArray.get(i));
                JSONObject obj = JSONObject.parseObject(str);/// 遍历JSONArray
                //JSONObject dwtxt = JSONObject.parseObject(jsonArray.getString(i));// jsonArray.getString(i)  获取对象
                String fnUrl=obj.getString("fnUrl");                                     // 获取对应的值
                String fnName=obj.getString("fnName");
                //copyFile(fnUrl,"D://"+"/"+time+"/"+fnName);                //拷贝文件 从旧路径到新路径  新路径命名地址/时间/名称
                copyFile(fnUrl+File.separator+fnName,file+File.separator+fnName);                //拷贝文件 从旧路径到新路径  新路径命名地址/时间/名称
            }
            //boolean zip = ZipUtil.zip("D://" + "/" + time, "D://" + "/" + time + ".zip");// 将拷贝好的文件  进行打包
            boolean zip = ZipUtil.zip("D:" + "\\" + time, "D:" + "\\" + time + ".zip");// 将拷贝好的文件  进行打包
            if (!zip){
                result.put("code",0);
                result.put("message","打包失败！");
                return result;
            }
//            文件已经打包好了   "D://"+"/"+time+".zip"
//            开始下载
           /* String filepath="D://";
            String filename=time+".zip";
            File file = new File(filepath);
            if (file.exists()) {
                response.setContentType("application/force-download");// 设置强制下载不打开
                response.addHeader("Content-Disposition",
                    "attachment;fileName=" + filename);// 设置文件名
                byte[] buffer = new byte[1024];
                FileInputStream fis = null;
                BufferedInputStream bis = null;
                try {
                    fis = new FileInputStream(file);
                    bis = new BufferedInputStream(fis);
                    OutputStream os = response.getOutputStream();
                    int i = bis.read(buffer);
                    while (i != -1) {
                        os.write(buffer, 0, i);
                        i = bis.read(buffer);
                    }
//                    log.info("success");
                } catch (Exception e) {
                    e.printStackTrace();
                } finally {
                    if (bis != null) {
                        try {
                            bis.close();
                        } catch (IOException e) {
                            e.printStackTrace();
                        }
                    }
                    if (fis != null) {
                        try {
                            fis.close();
                        } catch (IOException e) {
                            e.printStackTrace();
                        }
                    }
                }
            }
            return null;*/
           //result.put("fnUrl","D://" + "/" + time + ".zip");
           result.put("fnUrl","D:" + "\\" + time + ".zip");
        }catch (Exception e){
            result.put("code",0);
            result.put("message","打包失败！");
            result.put("errorMsg",e);
        }finally {
            if (file!=null&&file.exists()){
                //FileUtil.delFolder("D://"+"/"+time);                                     //删除拷贝过来的文件，不删除*.zip文件
                FileUtil.delFolder("D:"+"\\"+time);                                     //删除拷贝过来的文件，不删除*.zip文件
            }
        }
        return result;
    }