/* @RequestMapping(value = "/doUpload", method = RequestMethod.POST)
    @Timed
    @ApiOperation(value = "文件上传")
    public String upload(MultipartFile uploadFile, HttpServletRequest request, String fmurl,int id,String pid) throws IOException {
        String fileUrl = "/file/" + fmurl;
        //String fileUrl="\\\\http://39.98.182.94:8080/file/";
        System.out.println("_________________________" + fmurl);
        fileUrl = request.getServletContext().getRealPath(fileUrl);

        System.out.println("fileUrl = " + fileUrl);
        FileUtil.writeFileToUrl(uploadFile, fileUrl);

        //向数据库中保存文件信息
        Fm fileInfo = new Fm();
        fileInfo.setId(id);
        fileInfo.setPid(pid);
        fileInfo.setFnName(fmurl);
        fileInfo.setFnUrl(fileUrl);

        FileInfoDao dao = new FileInfoDaoImpl();
        try {
            dao.addFileInfo(fileInfo);
        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }

        return "user";
    }*/







提交到服务器命令:
1.cd /opt/project/hcycom-track(进入到jar包所在目录)
2.ll(查看这个目录的文件信息)
3.ps -ef | grep track(查看当前所运行的进程)
4.kill -9 4165(4165是id,如果你要重新运行的进程正在运行要先把运行中的进程杀死)
5.ll(再次查看文件中的文件详情)
6.ps -ef | grep track(再次查看进程，看刚才的进程是否已经杀死)
7.ll(查看文件详情)
8.rm system1.log(删除以前的日志)
9.nohup java -jar -Xmx256m hcycom-track-1.0.0.jar >system.log 2>&1&(运行你要启动的jar包,并限制它的最大运行内存)
10.ps -ef | grep track(查看进程是否已经启动)
11.tailf system.log(运行新的日志)